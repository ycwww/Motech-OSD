///////////////////////////////////////////////////////////////////////////////
/*! \file   sltrckeybitset.h
 *  \author Zapf Joachim
 *  \date   07.11.2014
 *  \brief  Headerfile for the class SlTrcKeyBitSet
 *
 *  The class SlTrcKeyBitSet implements saving and loading KeyBitSettings of SlTrc.
 *
 *  This file is part of the HMI Solutionline Trace Service.
 *
 *  (C) Copyright Siemens AG A&D MC 2014. All rights reserved.
 */
///////////////////////////////////////////////////////////////////////////////

#if !defined(SL_TRC_KEYBITSET_H_INCLUDED)
#define SL_TRC_KEYBITSET_H_INCLUDED

#if !defined (ACE_LACKS_PRAGMA_ONCE)
#pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include <QtCore/QString>

// Import/Export control
#ifndef SL_TRC_EXPORT
#define SL_TRC_EXPORT
#endif

///////////////////////////////////////////////////////////////////////////////
// Forward declarations
///////////////////////////////////////////////////////////////////////////////
class SlTrcKeyBitSetPrivate;

///////////////////////////////////////////////////////////////////////////////
// ENUMS
///////////////////////////////////////////////////////////////////////////////


/*! \class  SlTrcKeyBitSet
 *  \brief  Loads and save sltrc_keybitset.ini
 */
class SL_TRC_EXPORT SlTrcKeyBitSet
{
public:

  /////////////////////////////////////////////////////////////////////////////
  // CREATORS
  /////////////////////////////////////////////////////////////////////////////

  /*! \fn  SlTrcKeyBitSet(const QString& rszFileName = QString());
   *
   *  Creates an SlTrcKeyBitSet
   */
  SlTrcKeyBitSet(const QString& rszFileName = QString());

  /*! \fn  ~SlTrcKeyBitSet();
   *
   *  Destroys an SlTrcKeyBitSet
   */
  virtual ~SlTrcKeyBitSet();

  /////////////////////////////////////////////////////////////////////////////
  // public METHODS
  /////////////////////////////////////////////////////////////////////////////

  void setFileName(const QString& rszFileName);

  void createBackup(const bool bOverwrite = false);

  void restoreBackup(void);

  long createKeyBitSet(const QString& rszFilePath = QString::null, const bool bSetTraceFilePath = false);

  void activateKeysBitSet(void);

protected:
  /////////////////////////////////////////////////////////////////////////////
  // protected METHODS
  /////////////////////////////////////////////////////////////////////////////

  /////////////////////////////////////////////////////////////////////////////
  // protected MEMBERS
  /////////////////////////////////////////////////////////////////////////////

private:
  /////////////////////////////////////////////////////////////////////////////
  // private METHODS
  /////////////////////////////////////////////////////////////////////////////

  /*! copy constructor not allowed */
  SlTrcKeyBitSet(const SlTrcKeyBitSet& rCopy);
  /*! assignment operator not allowed */
  SlTrcKeyBitSet& operator=(const SlTrcKeyBitSet& rCopy);

  /////////////////////////////////////////////////////////////////////////////
  // private MEMBERS
  /////////////////////////////////////////////////////////////////////////////

  SlTrcKeyBitSetPrivate *m_pData;
};

#endif // !defined(SL_TRC_KEYBITSET_H_INCLUDED)
