///////////////////////////////////////////////////////////////////////////////
/*! \file   slsucommondata.h
 *  \author Joachim Zapf
 *  \date   15.08.2012
 *  \brief  Definition file for class SlSuCommonData
 *
 *  This file is part of the HMI Solutionline.
 *
 *  (C) Copyright Siemens AG A&D MC 2012. All rights reserved.
 */
///////////////////////////////////////////////////////////////////////////////

#ifndef SL_SU_COMMON_DATA_H_INCLUDED
#define SL_SU_COMMON_DATA_H_INCLUDED

#include <QtCore/QObject>

#if !defined(SL_LOGIC_COMMON_DATA_EXPORT)	
#   if defined(WIN32) || defined(WIN64)	
#	    ifdef SLSULOGIC_EXPORTS	
#		    define SL_LOGIC_COMMON_DATA_EXPORT  __declspec(dllexport)
#	    else		
#		    define SL_LOGIC_COMMON_DATA_EXPORT  __declspec(dllimport)
#	    endif
#   else			// Linux / MAC: no Export Makro
#	    define SL_LOGIC_COMMON_DATA_EXPORT	
#   endif
#endif

///////////////////////////////////////////////////////////////////////////////
// Forward declarations
///////////////////////////////////////////////////////////////////////////////
class SlSuCommonDataPrivate;

///////////////////////////////////////////////////////////////////////////////
// ENUMS
///////////////////////////////////////////////////////////////////////////////


/*! \class SlSuCommonData
 *  \brief
 */
class SL_LOGIC_COMMON_DATA_EXPORT SlSuCommonData : public QObject
{
  Q_OBJECT

public:

  /////////////////////////////////////////////////////////////////////////////
  // ENUMS
  /////////////////////////////////////////////////////////////////////////////

  /////////////////////////////////////////////////////////////////////////////
  // public METHODS
  /////////////////////////////////////////////////////////////////////////////

  static SlSuCommonData *getInstance(void);

  static void releaseInstance(SlSuCommonData *&rpInstance);

  bool isKinChainsAvailable(void) const;

  bool isToolManagementConfigurationAvailable(void) const;

  /*! \fn bool isTransformationsAvailable(void) const
   *
   *  determines whether transformations are available.
   */
  bool isTransformationsAvailable(void) const;

  bool isBiDirCompAvailable(void) const;

  bool isSpindCompAvailable(void) const;

  int numCecTables(void) const;
  int maxNumCecCompPoints(const int iTable) const;
  int maxNumEecCompPoints(const int iAxNo, const int iMeasSys) const;

  /*!
   * \fn bool is828D(void) const
   * 
   * \return true if hmi is running on 828 hardware else false
   */
  bool is828D(void) const;

signals:
  /////////////////////////////////////////////////////////////////////////////
  // SIGNALS
  /////////////////////////////////////////////////////////////////////////////

  void cfgStateChanged(long lCfgState);

public slots:
  /////////////////////////////////////////////////////////////////////////////
  // public SLOTS
  /////////////////////////////////////////////////////////////////////////////

protected:
  /////////////////////////////////////////////////////////////////////////////
  // protected METHODS
  /////////////////////////////////////////////////////////////////////////////

protected slots:
  /////////////////////////////////////////////////////////////////////////////
  // protected SLOTS
  /////////////////////////////////////////////////////////////////////////////

private slots:
  /////////////////////////////////////////////////////////////////////////////
  // private SLOTS
  /////////////////////////////////////////////////////////////////////////////

  void cfgStateChangedSlot(long lCfgState);

private:
  /////////////////////////////////////////////////////////////////////////////
  // private MEMBERS
  /////////////////////////////////////////////////////////////////////////////

  static SlSuCommonData* S_pInstance;

  SlSuCommonDataPrivate *m_pData;

  /////////////////////////////////////////////////////////////////////////////
  // private METHODS
  /////////////////////////////////////////////////////////////////////////////

  /////////////////////////////////////////////////////////////////////////////
  // private CREATORS
  /////////////////////////////////////////////////////////////////////////////

  /*! \fn SlSuCommonData()
   *
   *  Constructor
   */
  SlSuCommonData();

  /*! \fn virtual ~SlSuCommonData();
   *
   *  Destructor
   */
  virtual ~SlSuCommonData();

  friend class SlSuCommonDataDestroyer;

};

#endif // SL_SU_COMMON_DATA_H_INCLUDED
